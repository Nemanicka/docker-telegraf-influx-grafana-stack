version: '3.6'
services:
  # telegraf:
  #   image: telegraf:1.18-alpine
  #   container_name: telegraf
  #   volumes:
  #     - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
  #     - //var/run/docker.sock:/var/run/docker.sock:ro
  #   depends_on:
  #     - influxdb
  #   # links:
  #     # - influxdb
  #   ports:
  #     - '8125:8125/udp'
  #   network_mode: "host"
    
  # influxdb:
  #   image: influxdb:1.8-alpine
  #   env_file: configuration.env
  #   ports:
  #     - '8086:8086'
  #   volumes:
  #     - ./:/imports
  #     - influxdb-data:/var/lib/influxdb
  #   network_mode: "host"

  # grafana:
  #   image: grafana/grafana:8.0.2
  #   depends_on:
  #     - influxdb
  #   env_file: configuration.env
  #   # links:
  #   #   - influxdb
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - grafana-data:/var/lib/grafana
  #     - ./grafana/provisioning/:/etc/grafana/provisioning/
  #     - ./grafana/dashboards/:/var/lib/grafana/dashboards/
  #   network_mode: "host"
  app-back:
    image: nemanicka/prjctr_hw4_app
    container_name: app-back
    ports: 
      - '3030:3030'
    depends_on:
      - mongodb
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    network_mode: "host"

  nginx:
    image: brunaobh/nginx
    container_name: nginx
    volumes: 
            - ./nginx/conf/:/etc/nginx/conf.d/
    ports:
            - '80:80'
            - '443:443'
    depends_on:
      - app-back
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
           #networks:
           #- prjctr_hw_nginx
    network_mode: "host"  
  mongodb:
    image: brunaobh/mongodb
    container_name: mongodb
    #networks:
    #- prjctr_hw
    volumes:
            - mongodb-data:/data/db
    ports:
            - '27017:27017'
            - '28017:28017'
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
    network_mode: "host"  

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.10.2
  #   container_name: elasticsearch
  #   environment:
  #           - discovery.type=single-node
  #   ports:
  #           - '9200:9200'
  #   volumes:
  #           - es-data:/usr/share/elasticsearch/data
              #network_mode: "host"  
      #networks:
      #- prjctr_hw
      #networks:
      #prjctr_hw:
      #driver: bridge
      #prjctr_hw_nginx: 
volumes:
  grafana-data: {}
  influxdb-data: {}
  mongodb-data: {}
  es-data: {}
